#PCKCE WITH plain
http://localhost:8003/oauth/authorize?response_type=code&client_id=backanalytics&redirect_uri=localhost:8003&code_challenge=f5gfg454fdguuu7u7u7u878e78ewer9e9r&code_challenge_method=plain

#PKCE WITH SHA s256

Code Verifier: UqpL~9P9wpr~0f.4v1IvYXLuN1TOzJcvLVByHmYW8HhzuIh3HeafX0DzcMnYNdKE4-636luggOVSAHgrjb3UtfZPS4MwYlIKz46Jm4g4Tw7xG45W~T~myj7yiwC8Pw0h
Code Challenge: 23cOUTVpbwm_RqVMK_s-EDY4iLNTyUc21SIu7q9SUZg
Online PKCE Generator Tool: https://tonyxu-io.github.io/pkce-generator/

http://localhost:8003/oauth/authorize?response_type=code&client_id=backanalytics&redirect_uri=localhost:8003&code_challenge=23cOUTVpbwm_RqVMK_s-EDY4iLNTyUc21SIu7q9SUZg&code_challenge_method=s256

Gerando um arquivo JKS com um par de chaves
keytool -genkeypair -alias ws -keyalg RSA -keypass 123456 -keystore ws.jks -storepass 123456 -validity 3650

Listando as entradas de um arquivo JKS
keytool -list -keystore ws.jks

Gerando o certificado
keytool -export -rfc -alias ws -keystore ws.jks -file ws-cert.pem

Gerando a chave pública com open ssl
openssl x509 -pubkey -noout -in ws-cert.pem > ws-pkey.pem

Gerar chave pública pelo endpoint
Habilita no AuthorizationServerConfig
.tokenKeyAccess("permitAll()")
Enpoint que gerar a chave:
localhost:8081/oauth/token_key